openapi: 3.0.0
info:
  description: >-
    This is a mock api services which mocks the
    [OpenWeatherMap](https://openweathermap.org/api) API. For this mock api you
    can use a mock authentication username: `user` and password: `password` to
    test the authorization.
  version: 1.1.0-oas3
  title: Mock Weather API
  contact:
    email: mockapi@apimocker.com
servers:
  - url: http://52.91.15.192:3000/v1
tags:
  - name: Welcome
    description: Home page of our MockWeatherAPI
  - name: User
    description: Login to get your access token.
  - name: Weather
    description: Get the weather details of your mock location
paths:
  /auth:
    post:
      tags:
      - "User"
      summary: "Authenticate user credentials and return token"
      description: ""
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: "The user to login"
        required: true
      responses:
        "200":
          description: "Successful Operation"
          content:
            application/json:
              examples:
                response:
                  value:
                    token: "JWT obtained on successful authentication"
  /hello:
    get:
      tags:
      - "Welcome"
      summary: "Welcome page"
      description: ""
      operationId: getMessage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Generates welcome message"
          content:
            application/json:
              examples:
                response:
                  value:
                    message: "Welcome to MockWeatherAPI"
  /weather:
    get:
      tags:
      - "Weather"
      summary: "Returns the current temperature"
      description: ""
      operationId: getTemperature
      security:
        - bearerAuth: []
      parameters:
      - name: "location"
        in: "query"
        description: "Name of city"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "Successful Operation"
          content:
            application/json:
              examples:
                response:
                  value:
                    coord:
                      lon: -123.262
                      lat: 44.5646
                    weather:
                      - id: 804
                        main: Clouds
                        description: overcast clouds
                        icon: 04n
                    base: stations
                    main:
                      temp: 276.68
                      feels_like: 276.68
                      temp_min: 274.68
                      temp_max: 281.83
                      pressure: 1022
                      humidity: 86
                    visibility: 10000
                    wind:
                      speed: 0.79
                      deg: 300
                      gust: 0.77
                    clouds:
                      all: 85
                    dt: 1643514653
                    sys:
                      type: 2
                      id: 2040223
                      country: US
                      sunrise: 1643470496
                      sunset: 1643505438
                    timezone: -28800
                    id: 5720727
                    name: Corvallis
                    cod: 200
        '400':
          description: "Invalid q/appid"
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string